// Code generated by "stringer -type=NodeKind"; DO NOT EDIT.

package main

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ND_NULL_EXPR-0]
	_ = x[ND_ADD-1]
	_ = x[ND_SUB-2]
	_ = x[ND_MUL-3]
	_ = x[ND_DIV-4]
	_ = x[ND_NEG-5]
	_ = x[ND_MOD-6]
	_ = x[ND_BITAND-7]
	_ = x[ND_BITOR-8]
	_ = x[ND_BITXOR-9]
	_ = x[ND_SHL-10]
	_ = x[ND_SHR-11]
	_ = x[ND_EQ-12]
	_ = x[ND_NE-13]
	_ = x[ND_LT-14]
	_ = x[ND_LE-15]
	_ = x[ND_ASSIGN-16]
	_ = x[ND_COND-17]
	_ = x[ND_COMMA-18]
	_ = x[ND_MEMBER-19]
	_ = x[ND_ADDR-20]
	_ = x[ND_DEREF-21]
	_ = x[ND_NOT-22]
	_ = x[ND_BITNOT-23]
	_ = x[ND_LOGAND-24]
	_ = x[ND_LOGOR-25]
	_ = x[ND_RETURN-26]
	_ = x[ND_IF-27]
	_ = x[ND_FOR-28]
	_ = x[ND_SWITCH-29]
	_ = x[ND_CASE-30]
	_ = x[ND_BLOCK-31]
	_ = x[ND_GOTO-32]
	_ = x[ND_LABEL-33]
	_ = x[ND_FUNCALL-34]
	_ = x[ND_EXPR_STMT-35]
	_ = x[ND_STMT_EXPR-36]
	_ = x[ND_VAR-37]
	_ = x[ND_NUM-38]
	_ = x[ND_CAST-39]
	_ = x[ND_MEMZERO-40]
}

const _NodeKind_name = "ND_NULL_EXPRND_ADDND_SUBND_MULND_DIVND_NEGND_MODND_BITANDND_BITORND_BITXORND_SHLND_SHRND_EQND_NEND_LTND_LEND_ASSIGNND_CONDND_COMMAND_MEMBERND_ADDRND_DEREFND_NOTND_BITNOTND_LOGANDND_LOGORND_RETURNND_IFND_FORND_SWITCHND_CASEND_BLOCKND_GOTOND_LABELND_FUNCALLND_EXPR_STMTND_STMT_EXPRND_VARND_NUMND_CASTND_MEMZERO"

var _NodeKind_index = [...]uint16{0, 12, 18, 24, 30, 36, 42, 48, 57, 65, 74, 80, 86, 91, 96, 101, 106, 115, 122, 130, 139, 146, 154, 160, 169, 178, 186, 195, 200, 206, 215, 222, 230, 237, 245, 255, 267, 279, 285, 291, 298, 308}

func (i NodeKind) String() string {
	if i < 0 || i >= NodeKind(len(_NodeKind_index)-1) {
		return "NodeKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeKind_name[_NodeKind_index[i]:_NodeKind_index[i+1]]
}
