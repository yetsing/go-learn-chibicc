commit 0522e2d77e3ab82d3b80a5be8dbbdc8d4180561c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 11:29:50 2019 +0900

    Compile an integer to an exectuable that exits with the given number

= easy

commit bf7081fba7d8c6b1cd8a12eb329697a5481c604e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 12:20:08 2019 +0900

    Add + and - operators

= easy

commit a1ab0ff26f23c82f15180051204eeb6279747c9a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 12:36:06 2019 +0900

    Add a tokenizer to allow space characters between tokens

= easy

commit cc5a6d978144bda90220bd10866c4fd908d07546
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 15:02:08 2019 +0900

    Improve error message

    Now, chibicc can print out an error message with an error location
    like this:

      $ ./chibicc 1+foo
      1+foo
        ^ expected a number

= easy

commit 84cfcaf98f3d19c8f0f316e22a61725ad201f0f6
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 15:36:43 2019 +0900

    Add *, / and ()

= 结构大改，问题不大

commit bf9ab52860c1cbbeeca40df515468f42300ff429
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 15:41:40 2019 +0900

    Add unary plus and minus

= 一元操作符 easy

commit 25b4b85b887c643e337a9fbcd1b0220b413952bf
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 16:15:23 2019 +0900

    Add ==, !=, <= and >= operators

= 比较操作 easy

commit 725badfb494544b7c7f1d4c4690b9bc033c6d051
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:11:16 2020 +0900

    Split main.c into multiple small files

= 文件拆分 easy

commit 76cae0ad05b6ba3e3e927b2b749ccddda23f0c51
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 08:50:44 2020 +0900

    Accept multiple statements separated by semicolons

= 增加语句 easy

commit 1f9f3adf324af1432a380b41c7690834e649e346
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 08:59:56 2020 +0900

    Support single-letter local variables

= 支持本地变量（地址） middle

commit 482c26b536f8e5c998af6210470cd3d97a47ee9a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:12:19 2020 +0900

    Support multi-letter local variables

= 多字母本地变量 easy
= 甚至改完 tokenize 就直接测试通过

commit 6cc1c1f0643ce0f1af0857e024a0a438ddb45853
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:12:57 2020 +0900

    Add "return" statement

= 增加 return ， return 就是 jump 到函数指令末尾 easy

commit 18ac283a5d19c19f1e1a7020a50fe34c2160a0f8
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 13:38:41 2020 +0900

    Add { ... }

= 增加 block 多条语句 easy

commit ff8912c68e877744f8b15070e098af786e7bd296
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu May 14 11:05:01 2020 +0900

    Add null statement

= 增加空语句， parse 的小调整 easy

commit 72b841508f562c65b427a502fe6b270c3717319b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 12:47:09 2020 +0900

    Add "if" statement

= 增加 if 语句，还在我的掌握之中 easy

commit f5d480f139592cc2670c2b05076c39b2fd6fe9b3
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 17:35:53 2019 +0900

    Add "for" statement

= 增加 for 语句，还在我的掌握之中 easy

commit 1f3eb34f637520b01e6b8cd10a9026d05036db6d
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 17:24:03 2019 +0900

    Add "while" statement

= 增加 while 语句，充分说明了 while 就是 for 的特殊形式 easy

commit 5b142b1dcf6561df3c44a743965af3bd4e619112
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 18:07:31 2019 +0900

    Add LICENSE and README.md

= easy

commit 3d8627719be00e39070eaca0ee5b599f2a877c5c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 11:23:04 2020 +0900

    Add a representative node to each Node to improve error messages

= easy

commit 863e2b8de25fdf43a4a63b93d0f57718e9edaa47
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 5 21:12:44 2019 +0900

    Add unary & and *

= 指针操作，有点绕弯难懂，理解之后发现实现很简单 easy

commit a6bc4ab101c20b6398fd6bbfe124665bb7db5d25
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 13:39:06 2020 +0900

    Make pointer arithmetic work

= 指针运算， AST 层面进行处理 easy

commit b4e82cf7ce1cbfff8dd30f20fdad73fd3f1d5ccb
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Sep 3 15:43:36 2020 +0900

    Add keyword "int" and make variable definition mandatory

= mandatory 强制的
= 声明的语法是真的奇怪 middle

commit 30a39926272a8341c52018654ca18d2c86ba662b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 18:25:20 2019 +0900

    Support zero-arity function calls

= easy

commit 964b1d2a0e3e46882743f16703cb12b51e724179
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 19:03:46 2019 +0900

    Support function call with up to 6 arguments

= x86-64 System V 调用约定，前6个整型或指针类参数依次通过寄存器传递，顺序为：%rdi、%rsi、%rdx、%rcx、%r8、%r9
= easy

commit 6cb4220f339e7d2a894e44b61c90c576a482914b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 19:01:33 2020 +0900

    Support zero-arity function definition

= 函数定义语法更是大惑不解， declarator 怎么就多了一个 type-suffix
= 还有 Type ，增加 name 和 return_ty ，为何如此设计
= easy

commit aacc0cfec24e0aef1e884ac8b657e182a33a7b1c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 13:39:48 2020 +0900

    Support function definition up to 6 parameters

= 支持最多 6 个函数参数
= 因为一个全局变量 tyInt ， debug 了好久 :()
= hard

commit 8b6395d0f2be4024bd7e7921157a6496951eb162
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 10:15:32 2020 +0900

    Add one dimensional arrays

= 数组和指针 easy

commit 3ce1b2d067164f754dcb4216c193dc98e164b3ce
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 5 23:56:37 2019 +0900

    Add arrays of arrays

= 多维数组，修复了之前的一个问题 easy

commit 648646bba704745274fcd4fef3b7029c7f7e0fcd
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 6 18:14:53 2019 +0900

    Add [] operator

= EBNF 语法愈发让人难懂
= 按个人经验来看， [] 会放在 primary 里面
= easy

commit 3e55cafef80f0fc9d74bb06ea174de4b53e2ef94
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 6 18:44:53 2019 +0900

    Add sizeof

= sizeof 编译期操作，在 parse 中直接取值 easy

commit 0b7663481d0513067e0c0af04765b8578ae2a498
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 17:58:53 2020 +0900

    Merge Function with Var

    No functional change

= easy

commit a4d3223a7215712b86076fad8aaf179d8f768b14
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 5 08:43:21 2020 +0900

    Add global variables

= 全局变量 easy

commit be38d63d1b9cd236ef3ec884eedad8112bb6e6f9
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 27 21:04:17 2020 +0900

    Add char type

= 支持 char 类型
= 增加了 isTypename 函数判断 Token 是否类型名
= C 语言有 typedef 定义类型别名，所以类型和标志符 parse 不好区分
= 这可能也是现在语言类型后置的原因嘛
= easy

commit 4cedda2dbeca6bd81d2bd00032f7cff46e0a985e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 12:49:08 2020 +0900

    Add string literal

= 字符串字面量 easy

commit 35a0bcd366163168bf3337975130f62fc1c30235
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Oct 8 14:30:04 2020 +0900

    Refactoring: Add a utility function

= nothing to do easy

commit ad7749f2fad87a4b1df644d4e1c345b3f87d386d
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 6 22:36:19 2019 +0900

    Add \a, \b, \t, \n \v, \f, \r and \e

= 支持转义
= 循环索引处理容易出错，应该用几个例子试验一下 middle

commit 699d2b7e3f4ea4ba6ec2d5080f87e243989a5835
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 6 08:49:00 2020 +0900

    Add \<octal-sequence>

= AI 直接补全 easy

commit c2cc1d3c4500caa34da5e68eb62b7474caf96fe2
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:14:14 2020 +0900

    Add \x<hexadecimal-sequence>

= 因为是直接处理的字符串，需要考虑边界判断，导致逻辑很多
= 一种简单的方式是在源代码后面增加几个空格
= 像 C 字符串末尾有个 \0 ，刚好方便
= easy

commit 9dae23461eb6250865f4ee727a0e727a6a4e03ba
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 7 08:05:18 2019 +0900

    [GNU] Add statement expression

    This is a GNU C extension but will be useful for writing tests.

= easy

commit d9ea59757e2710e34f105e98230f30f578e0e662
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 7 08:30:06 2019 +0900

    Read code from a file instead of argv[1]

= AI 加持毫无难度 easy

commit 7b8528f71c78a01e8ff41a76a83a320d1ef80e93
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Sep 3 22:00:02 2020 +0900

    Refactor -- no functionality change

= easy

commit a0388bada4016bc0c3be6154c159faf80ce18d01
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri May 8 20:44:25 2020 +0900

    Add -o and --help options

= easy

commit 6c0a42926a10ea5abc781c9db89b105e007512b1
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 7 08:56:28 2019 +0900

    Add line and block comments

= easy

commit ca8b2434c97fc37c14eddcb3a4e831d030ebb041
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 18:00:26 2020 +0900

    Handle block scope

= 各种链表，脑子快链乱了 easy

commit cd832a311e56bda981c9c957ba45f1bc1f6cc737
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 19:03:01 2020 +0900

    Rewrite tests in shell script in C

= 一开始以为是要 C 写测试，后面发现是写测试文件
= 编译测试文件，验证执行
= 这样只要复制粘贴即可 easy

commit 6647ad9b843768968db0a331ff7077904c6f58ee
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 20 22:23:11 2020 +0900

    Precompute line number for each token

    No functionality change

= easy

commit 1c91d1943a8ee07034224dd950412c3c87ef3276
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 20 22:15:09 2020 +0900

    Emit .file and .loc assembler directives

    With these directives, gdb can print out an error location when
    a compiled program crashes.

= easy

commit e6307ad374eeecd6474286b1b6fda5b3dda89d9a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 12 10:29:17 2019 +0900

    Add comma operator

    This patch allows writing a comma expression on the left-hand side
    of an assignment expression. This is called the "generalized lvalue"
    which is a deprecated GCC language extension. I'm implementing it
    anyway because it's useful to implement other features.

= type.go 忘记增加 ND_COMMA 的处理，又花费大段时间 debug
= middle

commit f814033d04c4cefdbcf8174d65011d484d69303c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 8 22:43:58 2019 +0900

    Add struct

= 又是一个地方写错， debug 了好久，烦心烦力 middle

commit 9443e4b8bc587b670f9b448b03842530cd355760
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 30 17:21:54 2020 +0900

    Align struct members

= 有 AI 解释各种规则，各种细节都清晰起来 easy

commit dfec1157b41bb86c8cb66eee0b0cbdb9dcccb6f4
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Aug 9 00:10:31 2019 +0900

    Align local variables

= easy

commit e1e831ea3ee46ed7d4c975822f418d60d3050e1b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 10:43:02 2020 +0900

    Support struct tags

= struct 名字称为 tag (=m=)
= easy

commit f0a018a7d6f5e3847d7e66e324c5f71a55c8b5ef
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:16:40 2020 +0900

    Add -> operator

= 意想不到的改动
= easy

commit 11e3841832697c8ba4a1d68f5daa05045f70a716
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Apr 2 21:54:47 2020 +0900

    Add union

= easy

commit bef05432c9d3289636ed1d360ca9b863a0698dc7
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Apr 18 01:05:18 2020 +0900

    Add struct assignment

= 理解错意思了，以为是实现 x.a = 3 ，百思不得其解
= 后面找了一个例子，输出汇编仔细比对后发现，实现的是整个结构体的赋值
= 比如 struct t t1, t2; t1 = t2;
= AI 对代码的理解完全正确，是我错怪他了 <(_ _)>
= hard
