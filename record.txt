commit 0522e2d77e3ab82d3b80a5be8dbbdc8d4180561c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 11:29:50 2019 +0900

    Compile an integer to an exectuable that exits with the given number

= easy

commit bf7081fba7d8c6b1cd8a12eb329697a5481c604e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 12:20:08 2019 +0900

    Add + and - operators

= easy

commit a1ab0ff26f23c82f15180051204eeb6279747c9a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 12:36:06 2019 +0900

    Add a tokenizer to allow space characters between tokens

= easy

commit cc5a6d978144bda90220bd10866c4fd908d07546
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 15:02:08 2019 +0900

    Improve error message

    Now, chibicc can print out an error message with an error location
    like this:

      $ ./chibicc 1+foo
      1+foo
        ^ expected a number

= easy

commit 84cfcaf98f3d19c8f0f316e22a61725ad201f0f6
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 15:36:43 2019 +0900

    Add *, / and ()

= 结构大改，问题不大

commit bf9ab52860c1cbbeeca40df515468f42300ff429
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 15:41:40 2019 +0900

    Add unary plus and minus

= 一元操作符 easy

commit 25b4b85b887c643e337a9fbcd1b0220b413952bf
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 3 16:15:23 2019 +0900

    Add ==, !=, <= and >= operators

= 比较操作 easy

commit 725badfb494544b7c7f1d4c4690b9bc033c6d051
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:11:16 2020 +0900

    Split main.c into multiple small files

= 文件拆分 easy

commit 76cae0ad05b6ba3e3e927b2b749ccddda23f0c51
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 08:50:44 2020 +0900

    Accept multiple statements separated by semicolons

= 增加语句 easy

commit 1f9f3adf324af1432a380b41c7690834e649e346
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 08:59:56 2020 +0900

    Support single-letter local variables

= 支持本地变量（地址） middle

commit 482c26b536f8e5c998af6210470cd3d97a47ee9a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:12:19 2020 +0900

    Support multi-letter local variables

= 多字母本地变量 easy
= 甚至改完 tokenize 就直接测试通过

commit 6cc1c1f0643ce0f1af0857e024a0a438ddb45853
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:12:57 2020 +0900

    Add "return" statement

= 增加 return ， return 就是 jump 到函数指令末尾 easy

commit 18ac283a5d19c19f1e1a7020a50fe34c2160a0f8
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 13:38:41 2020 +0900

    Add { ... }

= 增加 block 多条语句 easy

commit ff8912c68e877744f8b15070e098af786e7bd296
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu May 14 11:05:01 2020 +0900

    Add null statement

= 增加空语句， parse 的小调整 easy

commit 72b841508f562c65b427a502fe6b270c3717319b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 12:47:09 2020 +0900

    Add "if" statement

= 增加 if 语句，还在我的掌握之中 easy

commit f5d480f139592cc2670c2b05076c39b2fd6fe9b3
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 17:35:53 2019 +0900

    Add "for" statement

= 增加 for 语句，还在我的掌握之中 easy

commit 1f3eb34f637520b01e6b8cd10a9026d05036db6d
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 17:24:03 2019 +0900

    Add "while" statement

= 增加 while 语句，充分说明了 while 就是 for 的特殊形式 easy

commit 5b142b1dcf6561df3c44a743965af3bd4e619112
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 18:07:31 2019 +0900

    Add LICENSE and README.md

= easy

commit 3d8627719be00e39070eaca0ee5b599f2a877c5c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 11:23:04 2020 +0900

    Add a representative node to each Node to improve error messages

= easy

commit 863e2b8de25fdf43a4a63b93d0f57718e9edaa47
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 5 21:12:44 2019 +0900

    Add unary & and *

= 指针操作，有点绕弯难懂，理解之后发现实现很简单 easy

commit a6bc4ab101c20b6398fd6bbfe124665bb7db5d25
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 13:39:06 2020 +0900

    Make pointer arithmetic work

= 指针运算， AST 层面进行处理 easy

commit b4e82cf7ce1cbfff8dd30f20fdad73fd3f1d5ccb
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Sep 3 15:43:36 2020 +0900

    Add keyword "int" and make variable definition mandatory

= mandatory 强制的
= 声明的语法是真的奇怪 middle

commit 30a39926272a8341c52018654ca18d2c86ba662b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 18:25:20 2019 +0900

    Support zero-arity function calls

= easy

commit 964b1d2a0e3e46882743f16703cb12b51e724179
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 4 19:03:46 2019 +0900

    Support function call with up to 6 arguments

= x86-64 System V 调用约定，前6个整型或指针类参数依次通过寄存器传递，顺序为：%rdi、%rsi、%rdx、%rcx、%r8、%r9
= easy

commit 6cb4220f339e7d2a894e44b61c90c576a482914b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 19:01:33 2020 +0900

    Support zero-arity function definition

= 函数定义语法更是大惑不解， declarator 怎么就多了一个 type-suffix
= 还有 Type ，增加 name 和 return_ty ，为何如此设计
= easy

commit aacc0cfec24e0aef1e884ac8b657e182a33a7b1c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 13:39:48 2020 +0900

    Support function definition up to 6 parameters

= 支持最多 6 个函数参数
= 因为一个全局变量 tyInt ， debug 了好久 :()
= hard

commit 8b6395d0f2be4024bd7e7921157a6496951eb162
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 10:15:32 2020 +0900

    Add one dimensional arrays

= 数组和指针 easy

commit 3ce1b2d067164f754dcb4216c193dc98e164b3ce
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 5 23:56:37 2019 +0900

    Add arrays of arrays

= 多维数组，修复了之前的一个问题 easy

commit 648646bba704745274fcd4fef3b7029c7f7e0fcd
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 6 18:14:53 2019 +0900

    Add [] operator

= EBNF 语法愈发让人难懂
= 按个人经验来看， [] 会放在 primary 里面
= easy

commit 3e55cafef80f0fc9d74bb06ea174de4b53e2ef94
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 6 18:44:53 2019 +0900

    Add sizeof

= sizeof 编译期操作，在 parse 中直接取值 easy

commit 0b7663481d0513067e0c0af04765b8578ae2a498
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 17:58:53 2020 +0900

    Merge Function with Var

    No functional change

= easy

commit a4d3223a7215712b86076fad8aaf179d8f768b14
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 5 08:43:21 2020 +0900

    Add global variables

= 全局变量 easy

commit be38d63d1b9cd236ef3ec884eedad8112bb6e6f9
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 27 21:04:17 2020 +0900

    Add char type

= 支持 char 类型
= 增加了 isTypename 函数判断 Token 是否类型名
= C 语言有 typedef 定义类型别名，所以类型和标志符 parse 不好区分
= 这可能也是现在语言类型后置的原因嘛
= easy

commit 4cedda2dbeca6bd81d2bd00032f7cff46e0a985e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 12:49:08 2020 +0900

    Add string literal

= 字符串字面量 easy

commit 35a0bcd366163168bf3337975130f62fc1c30235
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Oct 8 14:30:04 2020 +0900

    Refactoring: Add a utility function

= nothing to do easy

commit ad7749f2fad87a4b1df644d4e1c345b3f87d386d
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 6 22:36:19 2019 +0900

    Add \a, \b, \t, \n \v, \f, \r and \e

= 支持转义
= 循环索引处理容易出错，应该用几个例子试验一下 middle

commit 699d2b7e3f4ea4ba6ec2d5080f87e243989a5835
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 6 08:49:00 2020 +0900

    Add \<octal-sequence>

= AI 直接补全 easy

commit c2cc1d3c4500caa34da5e68eb62b7474caf96fe2
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:14:14 2020 +0900

    Add \x<hexadecimal-sequence>

= 因为是直接处理的字符串，需要考虑边界判断，导致逻辑很多
= 一种简单的方式是在源代码后面增加几个空格
= 像 C 字符串末尾有个 \0 ，刚好方便
= easy

commit 9dae23461eb6250865f4ee727a0e727a6a4e03ba
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 7 08:05:18 2019 +0900

    [GNU] Add statement expression

    This is a GNU C extension but will be useful for writing tests.

= easy

commit d9ea59757e2710e34f105e98230f30f578e0e662
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 7 08:30:06 2019 +0900

    Read code from a file instead of argv[1]

= AI 加持毫无难度 easy

commit 7b8528f71c78a01e8ff41a76a83a320d1ef80e93
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Sep 3 22:00:02 2020 +0900

    Refactor -- no functionality change

= easy

commit a0388bada4016bc0c3be6154c159faf80ce18d01
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri May 8 20:44:25 2020 +0900

    Add -o and --help options

= easy

commit 6c0a42926a10ea5abc781c9db89b105e007512b1
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 7 08:56:28 2019 +0900

    Add line and block comments

= easy

commit ca8b2434c97fc37c14eddcb3a4e831d030ebb041
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 18:00:26 2020 +0900

    Handle block scope

= 各种链表，脑子快链乱了 easy

commit cd832a311e56bda981c9c957ba45f1bc1f6cc737
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 19:03:01 2020 +0900

    Rewrite tests in shell script in C

= 一开始以为是要 C 写测试，后面发现是写测试文件
= 编译测试文件，验证执行
= 这样只要复制粘贴即可 easy

commit 6647ad9b843768968db0a331ff7077904c6f58ee
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 20 22:23:11 2020 +0900

    Precompute line number for each token

    No functionality change

= easy

commit 1c91d1943a8ee07034224dd950412c3c87ef3276
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 20 22:15:09 2020 +0900

    Emit .file and .loc assembler directives

    With these directives, gdb can print out an error location when
    a compiled program crashes.

= easy

commit e6307ad374eeecd6474286b1b6fda5b3dda89d9a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 12 10:29:17 2019 +0900

    Add comma operator

    This patch allows writing a comma expression on the left-hand side
    of an assignment expression. This is called the "generalized lvalue"
    which is a deprecated GCC language extension. I'm implementing it
    anyway because it's useful to implement other features.

= type.go 忘记增加 ND_COMMA 的处理，又花费大段时间 debug
= middle

commit f814033d04c4cefdbcf8174d65011d484d69303c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 8 22:43:58 2019 +0900

    Add struct

= 又是一个地方写错， debug 了好久，烦心烦力 middle

commit 9443e4b8bc587b670f9b448b03842530cd355760
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 30 17:21:54 2020 +0900

    Align struct members

= 有 AI 解释各种规则，各种细节都清晰起来 easy

commit dfec1157b41bb86c8cb66eee0b0cbdb9dcccb6f4
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Aug 9 00:10:31 2019 +0900

    Align local variables

= easy

commit e1e831ea3ee46ed7d4c975822f418d60d3050e1b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 10:43:02 2020 +0900

    Support struct tags

= struct 名字称为 tag (=m=)
= easy

commit f0a018a7d6f5e3847d7e66e324c5f71a55c8b5ef
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:16:40 2020 +0900

    Add -> operator

= 意想不到的改动
= easy

commit 11e3841832697c8ba4a1d68f5daa05045f70a716
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Apr 2 21:54:47 2020 +0900

    Add union

= easy

commit bef05432c9d3289636ed1d360ca9b863a0698dc7
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Apr 18 01:05:18 2020 +0900

    Add struct assignment

= 理解错意思了，以为是实现 x.a = 3 ，百思不得其解
= 后面找了一个例子，输出汇编仔细比对后发现，实现的是整个结构体的赋值
= 比如 struct t t1, t2; t1 = t2;
= AI 对代码的理解完全正确，是我错怪他了 <(_ _)>
= hard

commit 5831edaab3eb6d56126c08f01f5639222602f7e5
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 6 08:09:09 2020 +0900

    Change size of int from 8 to 4

= easy

commit 43c2f0829f7d4ec3b96132b9964a778ff816b2eb
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 27 21:51:00 2020 +0900

    Add long type

= easy

commit 9d48eef58b964551350fe0c1f641a57f5da40529
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 6 08:10:01 2020 +0900

    Add short type

= easy

commit a817b23da3c6f39f22bc57c0a53169978d97d7fa
Author: Rui Ueyama <ru iu@cs.stanford.edu>
Date:   Sat Aug 10 23:05:37 2019 +0900

    Add nested type declarators

= 这个嵌套类型声明解析着实难懂，
= token 位置跳来跳去， debug 好长一段时间
= hard

commit 74e3acc296d90d6d16ae70803196e967564fb16a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 11:45:29 2020 +0900

    Add function declaration

= easy

commit 8c3503bb94bd6b2d57e1f979d9fc1d84383b2961
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 11 10:18:55 2019 +0900

    Add void type

= easy

commit 287906abb85081b961e118bb80b30decb93fba6f
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 11 14:12:01 2019 +0900

    Handle complex type declarations correctly

    chibicc can now read complex type declarations such as below.

      long x;
      long int x;
      int long x;
      short x;
      short int x;
      int short x;
      long long x;
      long long int x;

= easy

commit f46370ef98adec5d3a840d69a6b34a03d80b0699
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 20 21:53:23 2020 +0900

    Add `long long` as an alias for `long`

= easy

commit a6b82da1ae9eefa44dada0baa885c283823ad59a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 17:23:26 2020 +0900

    Add typedef

    In the following example, `x` is defined as an alias for `int`.

      typedef x;

    Below is valid C code where the second `t` is a local variable
    of type int having value 3.

      typedef int t;
      t t = 3;

= 有点迷糊，怎么就实现了这个功能 middle

commit 67543ea113c5cc2b15881e2bbb85ffd44feaef1f
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 11 15:04:35 2019 +0900

    Make sizeof to accept not only an expression but also a typename

    Previously, chibicc's sizeof accepted only an expression, so you
    couldn't write something like `sizeof(int)`. Now it accepts that.

= C 的类型语法有点复杂，写 C 代码的时候没有注意到
= easy

commit cb81a379d9f7aef32fb1bbebd18f8618e1617a3f
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Aug 28 15:44:40 2020 +0900

    Use 32 bit registers for char, short and int

= 之前一个地方类型没改到，又是一顿 debug
= 因为有对照组，到是容易发现问题所在
= middle

commit cfc4fa94c1eb17f37466571f74bbdfae03a6e11f
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 11 16:06:14 2019 +0900

    Add type cast

= easy

commit 8b430a6c5fd6d33a637f2c615f8e5ec59e7be30e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 10:24:45 2020 +0900

    Implement usual arithmetic conversion

= 优势一个地方没有改到，一顿 debug
= easy

commit 9e211cbf1d459babf035fd6b3407c2bd184cb639
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Aug 21 17:16:28 2020 +0900

    Report an error on undefined/undeclared functions

= easy

commit 818352acc07d0a982076b4b49345b42be706f5e1
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Apr 18 09:27:47 2020 +0900

    Handle return type conversion

= easy

commit fdc80bc6b5faa058b88d838332c71b7101712896
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Mar 22 18:43:16 2020 +0900

    Handle function argument type conversion

= easy

commit 44bba965cbe3827be2b68651e541b33fa040bb72
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Aug 28 22:07:54 2020 +0900

    Add _Bool type

    _Bool isn't just a 1-bit integer because when you convert a value
    to bool, the result is 1 if the original value is non-zero. This
    is contrary to the other small integral types, e.g. char, as you
    can see below:

      char x  = 256; // x is 0
      _Bool y = 256; // y is 1

= easy

commit aa0accc75e9358d313fef0a6d4005103e2ce25f5
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 11 16:27:43 2019 +0900

    Add character literal

= golang byte 是 uint8 ， C char 是 int8
= easy

commit 48ba2656fecc646ec4eb7f943fa94b02ed9725c7
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 11 19:59:27 2019 +0900

    Add enum

= easy

commit 736232f3d672dae9a1ddae800909204c17fbe37c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 17:25:15 2020 +0900

    Support file-scope functions

= easy

commit a4fea2ba3edeb8ab5a0812a09f14c2a771aa196c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 11 22:53:26 2019 +0900

    Allow for-loops to define local variables

= easy

commit 01a94c04aa2b5a95ac4038bd0d6fd5334fcbf882
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:17:30 2020 +0900

    Add +=, -=, *= and /=

= easy

commit 47f19371f75db9029ea1b8b3783624fb7838d2db
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:18:26 2020 +0900

    Add pre ++ and --

= easy

commit e8ca48cf41f5f3113cadfb23acfedad7b9fa2e63
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Apr 13 21:44:21 2020 +0900

    Add post ++ and --

= easy

commit 7df934d2b63727d67d1c054975893930fa6aff44
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 13 18:39:56 2019 +0900

    Add hexadecimal, octal and binary number literals

= easy

commit 6b88bcb306ef80b65d7f99c081ba83283b4ffac5
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 13 19:31:04 2019 +0900

    Add ! operator

= easy

commit 46a96d6862e4c1317ff48df69391fd98a1ae5e3d
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 13 19:41:11 2019 +0900

    Add ~ operator

= easy

commit daa739817c58baa8dcd0c23bb403d27d5907abfb
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:18:57 2020 +0900

    Add % and %=

= easy

commit 86440068b43d6f9c93fdb07c1c2279cbab579e73
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:19:35 2020 +0900

    Add &, |, ^, &=, |= and ^=

= easy

commit f30f78175c1fd50c8cdd132ca804573ae0d18453
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:22:11 2020 +0900

    Add && and ||

= easy

commit 29ed294906ebc271c32a755e1aefc360df4d3863
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 13 21:03:20 2019 +0900

    Add a notion of an incomplete array type

= easy

commit 79632219d0991aae83e1de3c56df7d664205c2b6
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 14 11:00:05 2019 +0900

    Decay an array to a pointer in the func param context

= easy

commit 61a10551209a0d3770449862152e1b73b584d771
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 11:10:28 2020 +0900

    Add a notion of an incomplete struct type

= easy

commit 6116cae4c4b98ef9ed55736f3a6c1d872de97767
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 12:27:21 2020 +0900

    Add goto and labeled statement

= easy

commit a4be55b333c9f712c334aac81e7ef4e076c2bc9b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 30 16:44:12 2020 +0900

    Resolve conflict between labels and typedefs

= easy

commit b3047f2317b74f19fb44dfe5e577d586d93dfa3c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 15 13:48:41 2019 +0900

    Add break statement

= easy

commit 3c83dfd8af045ae6923d4ccb3a3a5a50f4012346
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 27 21:59:19 2020 +0900

    Add continue statement

= easy

commit 044d9ae07ba700c52d8342e4eee26e07eea11619
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 15 16:43:24 2019 +0900

    Add switch-case

= easy

commit d0c0cb74b21f431c62f7eeb8dbc0d6e14c1eff14
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:23:22 2020 +0900

    Add <<, >>, <<= and >>=

= easy

commit 447ee098c51f6f615ef560b35d429f32f0cb5a35
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 17 10:27:35 2019 +0900

    Add ?: operator

= easy

commit 79f5de21eb706ea5486fd682a83ffbde7e4d16a9
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 17 10:38:20 2019 +0900

    Add constant expression

= int 类型转换， debug 整个晚上
= golang 在 32 位系统上，int 是 32 位在 64 位系统上，int 是 64 位。
= C int 通常是 32 位，并不会随着平台从 32 位到 64 位而变化。
= middle

commit 22dd560ecf06e9ac4a4c1be33be74bac7924f06a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 18 12:01:02 2019 +0900

    Support local variable initializers

= middle

commit ae0a37dc4b39018a95616836ae4aaf4c8bfd779b
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 18 13:36:43 2020 +0900

    Initialize excess array elements with zero

= 数组初始化这些 parse 代码，完全没有看懂 (´・Å・`)
= middle

commit a754732c046939cd87ac9fc8e9483ae9b3369449
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Apr 16 23:34:05 2020 +0900

    Skip excess initializer elements

= easy

commit 0d717373cc9e247fc6f6a0e02b0bbd424f0d70b0
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 18 16:34:39 2019 +0900

    Add string literal initializer

= C 语言的一些隐式规则，不注意就会出错
= easy

commit 5b955336032881edf835a50fb63f9581af1efd73
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 14:39:22 2020 +0900

    Allow to omit array length if an initializer is given

    So that you can write something like `int x[] = {1, 2, 3}`
    instead of `int x[3] = {1, 2, 3}`.

= 数组初始化相关的代码真是完全没看懂 -`д´-
= middle

commit e9d2c46ab3cc8b8518df289a4fc24a9e3fc9b3fe
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 18 17:56:36 2019 +0900

    Handle struct initializers for local variables

= 这些 initializers 逐渐累积不懂
= easy

commit aca19dd35027a12e245bfa52e6a98968e0cd2a9c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Jul 9 22:05:46 2020 +0900

    Allow to initialize a struct with other struct

= easy

commit 483b194a80e904c11c5c6d855303596145adacee
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Jul 20 23:23:27 2020 +0900

    Handle union initializers for local variables

= 持续不懂 -`д´-
= easy

commit bbfe3f4369e1dd2266b827c81d7d9078ab1d301f
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 17:26:34 2020 +0900

    Add global initializer for scalar and string

= 转义字符串的长度计算错误， debug 了好几通
= middle

commit eeb62b6dd547da5742f3ed74f8c8ae534d883dd9
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 18 20:35:17 2019 +0900

    Add struct initializer for global variable

= easy

commit 1eae5ae3678d079efc7d2807f10439e53932f811
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Jul 20 23:53:12 2020 +0900

    Handle union initializers for global variable

= 又被 C 语言字符串末尾 \0 坑了
= debug 了好久
= middle

commit efa0f3366ddb914cc29f96fcdf10f99ded61775c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 19 06:53:50 2019 +0900

    Allow parentheses in initializers to be omitted

= 啊啊啊啊， rest tok 指针变换又坑了一把
= 有些 parse 函数是先 try 一遍，如果可以才真正推进 token
= middle

commit a58958ccb40a127a83e3383ef3887e4721352238
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Apr 16 22:57:32 2020 +0900

    Allow extraneous braces for scalar initializer

= extraneous 无关的
= 允许多余的花括号，奇怪的语法
= easy

commit fde464c47cb69e030b58d8d204a508d6babd3e09
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Oct 6 13:08:41 2020 +0900

    Allow extraneous comma at the end of enum or initializer list

= 允许末尾多余的逗号，JSON 痛点之一
= easy

commit 3d216e3e06eee7ea3679503867a619c28458e8a7
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 19 17:15:03 2020 +0900

    Emit uninitialized global data to .bss instead of .data

= easy

commit 824543bb2f2b2e4f445d8c58b32f53bf1eec63ce
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 20 16:11:55 2020 +0900

    Add flexible array member

= 柔性数组，结构体最后一个字段类型为不定长度的数组
= easy

commit cd688a89b8a57e9614f278e29a9267709494d236
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 20 16:16:00 2020 +0900

    Allow to initialize struct flexible array member

= 虽然我已经看不懂结构体和数组初始化的解析逻辑，但是就先这样了
= easy

commit 7a1f816783064a12156807fe0a4d760c2e212d4e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Aug 20 08:30:43 2019 +0900

    Accept `void` as a parameter list

    `foo(void)` indicate that function foo does not take a parameter.

= easy

commit 157356c769d777b1721da8218724608081137fe2
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 19 17:16:58 2020 +0900

    Align global variables

= easy

commit 006a45ccd475296ee19ec87891523d89ce3f2f24
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 17:27:22 2020 +0900

    Add extern

= extern 声明的变量在汇编不用做任何特殊标记，忽略即可 (｡•ㅅ•｡)♡
= easy

commit 27647455e4cb7db1545a7b69c3a324aa025a471a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 18:08:32 2020 +0900

    Handle extern declarations in a block

= easy

commit 9df51789e7fd36fc1580bcd80676f9bcc4e24be1
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 11:20:55 2020 +0900

    Add _Alignof and _Alignas

= `_Alignas` 和 `_Alignof` 是 C11 标准引入的关键字，用于控制和查询类型的内存对齐方式。
= _Alignas 用于指定变量或类型的对齐要求。例如，可以声明一个变量必须按照 16 字节对齐：
= _Alignas(16) int x;
= 这保证了变量 `x` 的地址是 16 的倍数，有助于满足硬件要求或优化内存访问。
= _Alignof 用于查询某个类型的对齐单位，返回一个常量表达式（以字节为单位）。例如：
= size_t alignment = _Alignof(double);
= 上述代码将返回 `double` 类型的对齐要求。
= 总结：
= `_Alignas` 用来设置变量或类型的对齐方式；
= `_Alignof` 用来查询一个类型的对齐要求。
= easy

commit 310a87e15e98bb5abfd86ea7bb2a1cca1f5243c7
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 08:09:59 2020 +0900

    [GNU] Allow a variable as an operand of _Alignof

= easy

commit 319772b42ebc2311a56ef54e1e9a60c5583971b1
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 14:41:55 2020 +0900

    Add static local variables

= easy

commit 127056dc1de6ddad280f6cf09cb15538dca22f43
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 24 07:45:14 2019 +0900

    Add compound literals

= easy

commit 30b3e216cd4eca3b8a13cb0a0613f053ac1d4925
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 27 22:01:34 2020 +0900

    Add return that doesn't take any value

= sb 了，弄了好多个差不多名字的全局变量，写错成另外一个了
= easy

commit eb85527656f77b9532f3a78cefde7a2eb739189e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 11:21:12 2020 +0900

    Add static global variables

= easy

commit ee252e6ce79d752526504cf034fd41f070191824
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 24 16:09:46 2019 +0900

    Add do ... while

= easy

commit 6a0ed71107670b404af04bc20a2461165483f390
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 13 16:25:34 2020 +0900

    Align stack frame to 16 byte boundaries

= easy

commit dcd45792264795a32f19581a904dda8bf6d3ad06
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 13 16:25:46 2020 +0900

    Handle a function returning bool, char or short

    x86-64 psABI says that only the least significant 8 bits are
    significant if RAX has a return value of a function returning bool.
    Likewise, it looks like only the least significant 1 or 2 bytes
    are guaranteed to have a correct value for char and short return
    values, respectively

= easy

commit 58fc86137c23adc3d98be40117087c645a9d7e4e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Oct 7 20:24:13 2020 +0900

    Allow to call a variadic function

= easy

commit 754a24fafcea637cab8bc01bb2702069109a0358
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Aug 25 11:48:44 2019 +0900

    Add va_start to support variadic functions

= easy

commit 197689a22b38df2ced90e03117914a2248238c20
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 26 14:29:06 2020 +0900

    Check the number of function arguments

= easy

commit 3f59ce79554fcbccd15d42ff4b4ddb91812c7045
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Oct 6 17:08:59 2020 +0900

    Add `signed` keyword

= ( ˘･з･)
= easy

commit 34ab83bdf49a23a47bc90354a5a4d22686d8d92a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Aug 28 23:29:49 2020 +0900

    Add unsigned integral types

= 因为一个返回值的忽略，又 debug 了几个小时
= easy

commit aaf10459d93fb6c0f4539cb792c02a8d15cb0299
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 21 16:17:40 2019 +0900

    Add U, L and LL suffixes

= 这个数组解析有点琐碎，容易漏掉一些边界条件
= easy

commit 8b8f3de48bba31ccfa84e3573075b2125bc130c3
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Mar 24 22:18:59 2020 +0900

    Use long or ulong instead of int for some expressions

= easy

commit 6880a39d2a5aec8e5ed32c276109936ed503d0bb
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 11 21:29:12 2020 +0900

    When comparing two pointers, treat them as unsigned

= easy

commit 7ba6fe8d94af2a232a9da82b815502513f52e465
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Mar 26 21:20:24 2020 +0900

    Handle unsigned types in the constant expression

= easy

commit b77355427575385b6f0b6c0a914600b79b4e4412
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Sep 3 01:22:17 2020 +0900

    Ignore const, volatile, auto, register, restrict or _Noreturn.

= easy

commit 93d12771d009924fb598b088dc4bd9b67fd9a09a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 31 09:58:42 2020 +0900

    Ignore "static" and "const" in array-dimensions

= easy

commit 1fad2595d6fa67e57cd795d4faac4306e42e72c5
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri Sep 4 17:28:20 2020 +0900

    Allow to omit parameter name in function declaration

= easy

commit 1e57f72d8adf15937856a3ca3ca0e16ccb37421e
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 27 19:43:03 2020 +0900

    Add floating-point constant

= easy

commit 29de46aed47e5308db9a0aef6e13610dea8fb389
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Sep 12 14:47:47 2020 +0900

    Add "float" and "double" local variables and casts

= union 不是类型转换，而是字节数据的重新解释
= easy

commit cf9ceecb2f8cad2fb694b15c14ca1cf98e9524e7
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Sep 22 18:28:37 2020 +0900

    Add flonum ==, !=, < and <=

= easy

commit 83f76ebb66712a2560b2993e92265b574b1ab7ed
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Tue Sep 22 18:29:17 2020 +0900

    Add flonum +, -, * and /

= easy

commit 0ce109302715f8186b90671a53517a63a2741022
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sun Sep 13 15:58:36 2020 +0900

    Handle flonum for if, while, do, !, ?:, || and &&

= easy

commit 8ec1ebf176b88522fc4ec3980d20c78e13fdd526
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 27 22:46:16 2020 +0900

    Allow to call a function that takes/returns flonums

= easy

commit c6b30568b407e7b60b6fc2929801669434e4f91a
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Aug 27 22:47:31 2020 +0900

    Allow to define a function that takes/returns flonums

= easy

commit 8b14859f63a8389882bdb9330de592a112affa18
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Apr 30 23:33:27 2020 +0900

    Implement default argument promotion for float

= easy

commit e452cf721511dbf0d7f8c8f469f2dd67d8a5ee93
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri May 1 17:36:12 2020 +0900

    Support variadic function with floating-point parameters

= easy

commit ffea4219b1f4ebe7c06cecc6c221cb0aab3a03ea
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Fri May 1 19:30:17 2020 +0900

    Add flonum constant expression

= easy

commit 9bf96124ba1e0cb95f491bd0c91d4e9c7a9850da
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Aug 26 14:51:06 2020 +0900

    Add "long double" as an alias for "double"

= easy

commit 5d15431df1abab3a5cf596fabe0a77c030a10791
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 24 12:08:12 2019 +0900

    Add stage2 build

= easy

commit d06a8ac6e6120861c9c79acb15b9a18693e4ee47
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Sep 3 18:50:56 2020 +0900

    Add function pointer

= easy

commit c5953ba1328fa86f906406843eb9f23cd596ef04
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Mon Aug 31 21:28:53 2020 +0900

    Decay a function to a pointer in the func param context

= 这么简单就支持函数作为参数
= easy

commit 53e81033ce18fd94fcdcde9010b7c9d41f30aa2c
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Wed Sep 2 20:11:28 2020 +0900

    Add usual arithmetic conversion for function pointer

= easy

commit f3d96136f292dea83fd760098d189a6884f59eb0
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Sat Aug 15 22:30:28 2020 +0900

    Split cc1 from compiler driver

= easy

commit 140b43358c33fb5e9f86789541dbca306bb64fcc
Author: Rui Ueyama <ruiu@cs.stanford.edu>
Date:   Thu Oct 8 14:34:23 2020 +0900

    Run "as" command unless -S is given

= easy
